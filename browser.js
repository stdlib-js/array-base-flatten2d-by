// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(){"use strict";var e,r="function"==typeof Object.defineProperty?Object.defineProperty:null,t=Object.defineProperty,o=Object.prototype,n=o.toString,l=o.__defineGetter__,a=o.__defineSetter__,i=o.__lookupGetter__,u=o.__lookupSetter__;function f(e,r,t,o,n){var l,a,i,u,f,c;if(a=r[1],i=r[0],l=[],t){for(u=0;u<a;u++)for(f=0;f<i;f++)l.push(o.call(n,e[f][u],[f,u],e));return l}for(f=0;f<i;f++)for(c=e[f],u=0;u<a;u++)l.push(o.call(n,c[u],[f,u],e));return l}return e=function(){try{return r({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var f,c,p,_;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(i.call(e,r)||u.call(e,r)?(f=e.__proto__,e.__proto__=o,delete e[r],e[r]=t.value,e.__proto__=f):e[r]=t.value),p="get"in t,_="set"in t,c&&(p||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&l&&l.call(e,r,t.get),_&&a&&a.call(e,r,t.set),e},e(f,"assign",{configurable:!1,enumerable:!1,writable:!1,value:function(e,r,t,o,n,l,a,i){var u,f,c,p,_,d;if(u=r[1],f=r[0],d=l,t){for(c=0;c<u;c++)for(p=0;p<f;p++)o[d]=a.call(i,e[p][c],[p,c],e),d+=n;return o}for(p=0;p<f;p++)for(_=e[p],c=0;c<u;c++)o[d]=a.call(i,_[c],[p,c],e),d+=n;return o}}),f},"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).flatten2dBy=r();
//# sourceMappingURL=browser.js.map
